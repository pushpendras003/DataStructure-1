# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def isSymmetric(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
   
    
        r1=root
        r2=root
        
        if root.right is None and root.left is None:
            return True
        q=[root]
        q.append(root)
        left=0
        right=0
        while len(q)>0:
            left=q.pop(0)
            right=q.pop(0)
            if left.val != right.val:
                return False
            if left.left and right.right:
                q.append(left.left)
                q.append(right.right)
            elif left.left or right.right:
                return False
            if left.right and right.left:
                q.append(left.right)
                q.append(right.left)
            elif left.right or right.left:
                return False
        return True
