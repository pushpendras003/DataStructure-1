# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def preorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        """if root==None:
            return []
        return [root.val]+self.preorderTraversal(root.left)+self.preorderTraversal(root.right)
        """
        if root==None:
            return []
        stack=[]
        stack.append(root)
        l=[]
    
        
        while len(stack)>0:
            t=stack.pop()
            l.append(t.val)
            if t.right!=None:
                stack.append(t.right)
            if t.left!=None:
                stack.append(t.left)
            

            
                
            
        return l
        
